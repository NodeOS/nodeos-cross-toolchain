#!/usr/bin/env bash

set -o pipefail


SYMLINKS=(addr2line ar as c++filt elfedit gprof ld ld.bfd nm objcopy objdump \
          ranlib readelf size strings strip c++ cpp g++ gcc gcov gcov-tool)


# Delete symlinks stubs

(
  mkdir -p bin || exit 10

  cd bin

  rm ${SYMLINKS[@]} || exit 11
) || exit $?


# If host platform is not based on musl, don't create un-prefixed symlinks
readlink /lib/ld-linux.so.2 | grep musl || exit 0


#
# Create symbolic links for native platform binaries
#

PLATFORM=
CPU=

source scripts/adjustEnvVars.sh || exit $?

(
  mkdir -p bin || exit 20

  cd bin

  # Binutils
  ln -sf $TARGET-addr2line addr2line &&
  ln -sf $TARGET-ar        ar        &&
  ln -sf $TARGET-as        as        &&
  ln -sf $TARGET-c++filt   c++filt   &&
  ln -sf $TARGET-elfedit   elfedit   &&
  ln -sf $TARGET-gprof     gprof     &&
  ln -sf $TARGET-ld        ld        &&
  ln -sf $TARGET-ld.bfd    ld.bfd    &&
  ln -sf $TARGET-nm        nm        &&
  ln -sf $TARGET-objcopy   objcopy   &&
  ln -sf $TARGET-objdump   objdump   &&
  ln -sf $TARGET-ranlib    ranlib    &&
  ln -sf $TARGET-readelf   readelf   &&
  ln -sf $TARGET-size      size      &&
  ln -sf $TARGET-strings   strings   &&
  ln -sf $TARGET-strip     strip     || exit 21

  # GCC
  ln -sf $TARGET-c++       c++       &&
  ln -sf $TARGET-cpp       cpp       &&
  ln -sf $TARGET-g++       g++       &&
  ln -sf $TARGET-gcc       gcc       &&
  ln -sf $TARGET-gcov      gcov      &&
  ln -sf $TARGET-gcov-tool gcov-tool || exit 22
) || exit $?
